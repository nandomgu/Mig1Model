
function exploreParamOutput=exploreParamCombInitial(modelname, params, paramNum,numIter,integer, changeInitialConditions, outvar)
mediaInput= [0;0.0223032063571172;0.0405047314534221;0.0577574155317936;0.0708017171371265;0.074879900620598;0.0758356059661576;0.0771340928584555;0.0770603734213315;0.0766017074310701;0.0825233317190962;0.0909744554418606;0.093993550248502;0.102173022231747;0.116563929130705;0.143203882900438;0.176368881684685;0.223713693914748;0.281052257734873;0.346466307100618;0.407476155958698;0.471069387757387;0.533242734001389;0.593344344903071;0.646896154803748;0.701085931884189;0.738849711878534;0.778092173550209;0.811575003034639;0.840202031942638;0.856290962143873;0.882968428322724;0.897828449866704;0.904189374798246;0.904315649063733;0.906949983540048;0.904302812442446;0.89571826831523;0.884935318073253;0.875509014907067;0.86321464541776;0.846263132839432;0.83026705376725;0.813688756593054;0.79768698434489;0.778942343617509;0.756122945858676;0.728587294009643;0.695907127396961;0.653422645982901;0.598590983814381;0.539549562479458;0.479394232916031;0.414454994302869;0.348601794470689;0.285308136848455;0.224213405996943;0.167090244832356;0.122325009547493;0.0901200542782974;0.0726337968136678;0.0647512577549924;0.0600383055243802;0.0550657572829314;0.0492174819494744;0.0441327496532019;0.0404784360648094;0.0386288373598618;0.0392827393567328;0.0416060245174376;0.04385917090531;0.0492989753395697;0.0573014894896179;0.0739614838095577;0.0994063835142636;0.131546699085503;0.168006119875606;0.20781938996431;0.248857320083113;0.290178889871922;0.335607409038797;0.388906458123698;0.449891255385504;0.511048599375835;0.575290050983856;0.639074832665356;0.701137058482281;0.764278106678239;0.82464351652881;0.87528951712772;0.91648686201527;0.945361227023334;0.961844754355451;0.972233559512459;0.981067057337478;0.98776798745466;0.989072093065479;0.983223292248401;0.975825441497439;0.959369224507547;0.941174416237702;0.927473435570653;0.914943640537118;0.902157327430209;0.893530447953199;0.882762771839404;0.869213756591971;0.858531802932826;0.844644637638763;0.820074164859752;0.790494804327956;0.752437898339734;0.701541856613617;0.635115335626438;0.57337245957311;0.506332572458254;0.437997050295204;0.374797729083169;0.318603618410695;0.263920417707352;0.219355412800032;0.181480990485946;0.147997849252685;0.123091198645273;0.104051523676733;0.0870487941621835;0.0738718773828963;0.0639971956947056;0.0562793281769372;0.0495754666431618;0.0448937810251198;0.0412568388348441;0.0384279360909205;0.0358014676960468;0.0335895169856507;0.0316324820712432;0.0297321354517882;0.0275405856334663;0.0256602563979294;0.0234919909693372;0.0217603007531544;0.0201354702808326;0.0186647892246733;0.017383650443999;0.016511174268384;0.0152562395520462;0.0142146133505696;0.013299036415849;0.0122787686065637;0.0113007857746887;0.0104571487391209;0.00966251216427188;0.00902375582022215;0.00839836325494823;0.00778158911118866;0.00718619652525696];
gfpOutput= [0.231803482867499;0.161785330068469;0.113578284464115;0.0711800069118161;0.0396112282238076;0.0236474678586221;0.015358746058884;0.0264677746335;0.0283025872238387;0.0332815886452233;0.0446940831575163;0.0630828655286213;0.0689089721357689;0.0813002244727447;0.0913366107030379;0.110013286823348;0.11092841990106;0.128764907355564;0.145478661662944;0.178930018178471;0.186473473416812;0.218159389429967;0.234033490243453;0.257212833871208;0.267685748994289;0.293178657060665;0.294019771193547;0.310351471404392;0.314336474368675;0.301030960622203;0.305522733060323;0.303859876863032;0.290218780332943;0.279441413059935;0.273857594996358;0.235123287264262;0.230846174385013;0.225501573122337;0.21596946265165;0.209361725033196;0.222387770363304;0.210171648478168;0.187839073984592;0.183603797699473;0.174483132867837;0.166051789353419;0.162830619473071;0.171510621780295;0.165992907901105;0.174126047801769;0.171897375820531;0.170302414049618;0.167826959788448;0.163661456653414;0.170034914140752;0.197246656250688;0.2259801846904;0.253945854399602;0.318344505027413;0.41353633655093;0.519448034145678;0.626236613168068;0.732564388258335;0.793098786893217;0.828946229874966;0.853491523603005;0.881134412824745;0.905322094176187;0.952078746004592;0.961944760078483;0.967856018492862;0.959887300956344;0.959479604538497;0.948724109008562;0.946328289337485;0.926074989927128;0.915199314226106;0.899088007054237;0.879446164134958;0.859754802977384;0.847975445042859;0.822859714978968;0.803235402538741;0.800918319267543;0.790165627859212;0.776604923465158;0.768523326629937;0.767860374838372;0.761023284886097;0.746610235595334;0.739753396437458;0.740671099162733;0.732667478634777;0.716627363408588;0.712230650063854;0.71097973767255;0.700367480667922;0.683105914902205;0.663274135941247;0.647416417998506;0.633701357375477;0.619337186664269;0.593754088699179;0.587332117602037;0.583321673436556;0.568963905621816;0.559390716309534;0.562445685294087;0.550469740669043;0.542653859083225;0.533298925030206;0.527912861494521;0.52026804351168;0.513042311444433;0.511877510278361;0.516771674500859;0.505728920777328;0.519562896462513;0.550341874647213;0.584853802251017;0.643892855991678;0.730697812973205;0.797680628756961;0.874183547683045;0.952386223370106;0.98654749068214;1;0.995967656259298;0.956755731721854;0.900364214611716;0.856212658727575;0.804724170766806;0.766490094312712;0.718289348035697;0.674759759122434;0.636195236234683;0.598357330849697;0.547461350311858;0.512555909728664;0.476486833388502;0.430460166045471;0.394634904205805;0.381322661446984;0.364639898455015;0.34554797252326;0.329255535323809;0.302166776821714;0.279799111389833;0.262685024720999;0.24919412242294;0.241644008451624;0.250029823370368;0.245805027223922;0.244515724738892;0.247919176378002;0.241794474070121];
modelFeatures= extractModelFeatures(modelname);

%change initialConditions is a boolean vector that, for each of
%thevariables in the system, provides a 0 if the initial condition of such
%variable is to e initialized at 0 or 1 if it is to be changed randomly.
model=eval(strjoin({'@' modelname}, ''));
modelpath=strjoin({'/Users/s1259407/Dropbox/PhD/phd_peter_swain/matlab/HXTmodels/' modelname});

[s1,  s3]=system(['grep  ''params'' ' modelpath  ' | wc -l']);
    
   numpar= str2double(s3)-1;
    %retrieve number of parameters in the model
   [s1,  s4]=system(['grep  ''x('' ' modelpath  ' | wc -l']);
   numInit=str2double(s4) ;
    %retrieve which parameters in the model are Hill coefficients. to run
    %this make sure that all the models have all parameters clustered
    %together and their lines contain the string params.
   % [s1,  sc]=system(['grep  ''params('' ' fnames{j}  ' | grep -n ''hill'' ']);
    [s1,  s5]=system(['grep  ''params('' ' modelpath  ' | grep -n ''hill'' | cut -d '':'' -f1 ']);
    
    hillIndices= str2double(strtrim(strsplit(s5, '\n')))';
  
    hillIndices=hillIndices(find(~isnan(hillIndices)));



mediaInput=mediaInput';
gfpOutput=gfpOutput';
%these were created with mat2str


if(nargin<4)
    from=.1;
    to=1;
    by=.1;
end


if nargin<8
outvar=3
end

if nargin<7
initialConditions= exp(normrnd(0,1, numel(changeInitialConditions)));
else
    initialConditions= repmat(0, 1, numel(changeInitialConditions));
end


integerRange=[1 8];

paramSets=[];
xSets=[];
ySets=[];
rhoSets=[];
inits=[];

%figure;
for j= 1:numIter
func=rampSimHandle2(model, mediaInput,initialConditions, modelFeatures.options, outvar, gfpOutput);
tempParams=params;

if nargin>=7
    
    initialConditions(logical(changeInitialConditions))= exp(normrnd(0,2,1,sum(changeInitialConditions)));
    
    inits(j,:)=initialConditions;
end

if(integer==0)
tempParams(paramNum)= exp(normrnd(0,1, 1, numel(paramNum)));    
else
tempParams(paramNum)=exp(normrnd(0,1,1, numel(paramNum)));    
tempParams(intersect(hillIndices, paramNum))=randi(integerRange, 1, numel(intersect(hillIndices, paramNum)));   
end
    

[x,y]=func(log(tempParams));
paramSets(j,:)=tempParams;
%xSets(j)=x;
ySets(j,:)=y;
%rhoSets(j)=corr(y(40:end), gfpOutput(40:end))
hold on; plot(normalizeTS(y'), 'Color', [1 0 0]); hold on; 
end

plot(normalizeTS(gfpOutput), 'Color', [0 0 1], 'LineWidth', 3)


exploreParamOutput.params=paramSets;
%exploreParamOutput.x=xSets;
exploreParamOutput.y=ySets;
exploreParamOutput.function=func;
%exploreParamOutput.rho=rhoSets;
exploreParamOutput.initialConditions=inits;
%  hold on; plot(ySets(find(exploreParamOutput.rho==max(exploreParamOutput.rho)),:), 'Color', [0 0 1], 'LineWidth', 3); 
%  hold on; plot(ySets(find(exploreParamOutput.x==min(exploreParamOutput.x)),:), 'Color', [0 1 0], 'LineWidth', 3); hold on;
%  legend([find(exploreParamOutput.rho==max(exploreParamOutput.rho)), find(exploreParamOutput.x==min(exploreParamOutput.x))], ['Simulation ' num2str(find(exploreParamOutput.rho==max(exploreParamOutput.rho))) '. Max correlation of ' num2str(max(exploreParamOutput.rho))], ['Simulation ' num2str(find(exploreParamOutput.x==min(exploreParamOutput.x))) '. Min cost of ' num2str(min(exploreParamOutput.x))])
% hold on; plot(y, 'Color', [1 0 0]); hold on; 
% hold on; plot(y, 'Color', [1 0 0]); hold on; 


end